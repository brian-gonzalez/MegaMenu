define(["exports","@borngroup/born-utilities"],function(exports,_bornUtilities){"use strict";Object.defineProperty(exports,"__esModule",{value:true});function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError("Cannot call a class as a function")}}var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if("value"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor)}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor}}();var Megamenu=function(){function Megamenu(options){_classCallCheck(this,Megamenu);this.options=options||{};this.setProperties();this.menu=typeof this.options.menuSelector==="string"?document.querySelector(this.options.menuSelector):this.options.menuSelector;if(!this.menu){console.warn("Could not find target element");return}this.setupEventCallbacks();this.menu.triggers=this.menu.querySelectorAll(this.options.triggerSelector);[].forEach.call(this.menu.triggers,this.setupMenuTriggers.bind(this));this.setupMenuControlListeners()}_createClass(Megamenu,[{key:"setupEventCallbacks",value:function setupEventCallbacks(){this._beforeTriggerUnset=this.options.beforeTriggerUnset||function(){};this._afterTriggerSet=this.options.afterTriggerSet||function(){};this._afterMenuSet=this.options.afterMenuSet||function(){};this._afterTriggerUnset=this.options.afterTriggerUnset||function(){};this._afterMenuUnset=this.options.afterMenuUnset||function(){}}},{key:"setupMenuControlListeners",value:function setupMenuControlListeners(){this.menu.addEventListener("mousemove",this.getCursorSpeed.bind(this));this.menu.addEventListener("click",function(evt){this.isKeyboardEvent=false;this.unsetCurrentSubmenu(evt)}.bind(this));this.menu.addEventListener("keydown",function(evt){this.isKeyboardEvent=true;this.unsetCurrentSubmenu(evt)}.bind(this));if(this.options.unsetSubmenuOnFocusOut){document.addEventListener("focusin",function(evt){if(this.menu.isActive&&this.isKeyboardEvent){var lastActiveTrigger=this.getLastActiveTrigger();if(document.activeElement.megamenu&&lastActiveTrigger&&this.isSiblingTrigger(document.activeElement,lastActiveTrigger)){this.unsetSiblings(document.activeElement)}else if(!lastActiveTrigger.megamenu.target.contains(document.activeElement)){this.unsetSiblings()}}}.bind(this))}if(this.options.unsetOnClickOut){document.addEventListener("click",function(evt){if(this.menu.isActive&&!this.menu.contains(evt.target)){this.unsetSiblings()}}.bind(this))}if(this.options.unsetOnMouseleave){this.menu.addEventListener("mouseleave",this.unsetSiblings.bind(this))}}},{key:"getCursorSpeed",value:function getCursorSpeed(evt){var newX=Math.abs(evt.clientX),newY=Math.abs(evt.clientY),diffX=Math.abs((this._origX||0)-newX),diffY=Math.abs((this._origY||0)-newY);this._origX=newX;this._origY=newY;this.isMouseMoveFast=diffX/diffY>=.5?true:false}},{key:"setProperties",value:function setProperties(){this.options.events=this.options.events||"touchstart click keydown";this.options.menuActiveClass=this.options.menuActiveClass||"mega--active";this.options.itemActiveClass=this.options.itemActiveClass||"mega-item--active";this.options.waitForTransition=this.options.hasOwnProperty("waitForTransition")?this.options.waitForTransition:{};if(this.options.waitForTransition){this.options.waitForTransition.selector=this.options.waitForTransition.selector||this.options.targetSelector;this.options.waitForTransition.property=this.options.waitForTransition.property||"all"}this.options.unsetOnMouseleave=this.options.hasOwnProperty("unsetOnMouseleave")?this.options.unsetOnMouseleave:false;this.options.unsetOnClickOut=this.options.hasOwnProperty("unsetOnClickOut")?this.options.unsetOnClickOut:true;this.options.disableUnsetSelf=this.options.disableUnsetSelf||null;this.options.hoverDelay=this.options.hoverDelay||0;if(this.options.responsive){this.options.responsive.sort(_lowestBreakpoint);for(var i=0;i<this.options.responsive.length;i++){if(_mergeBreakpointProperties.call(this,this.options.responsive[i])){break}}}this.options.keyboardNavigation=(0,_bornUtilities.objectAssign)({triggers:[13,32],horizontal:"*",vertical:false,manageTabIndex:false},this.options.keyboardNavigation);function _mergeBreakpointProperties(breakpointOpts){if(window.matchMedia(breakpointOpts.breakpoint).matches){return(0,_bornUtilities.objectAssign)(this.options,breakpointOpts.settings)}return false}function _lowestBreakpoint(a,b){return a.breakpoint>b.breakpoint}}},{key:"setupMenuTriggers",value:function setupMenuTriggers(trigger,index){var menuItemID=trigger.id||this.getMenuItemID();trigger.megamenu={disableUnsetSelf:this.options.disableUnsetSelf?typeof this.options.disableUnsetSelf==="string"?trigger.matches(this.options.disableUnsetSelf):true:false};trigger.megamenu.parent=this.getTriggerParent(trigger);trigger.megamenu.siblings=this.getTriggerSiblings(trigger);trigger.megamenu.index=trigger.megamenu.siblings.indexOf(trigger);if(!trigger.hasAttribute("data-menu-close")){trigger.megamenu.target=this.getTriggerTarget(trigger)}if(this.options.keyboardNavigation.manageTabIndex){this.setInitialTabIndex(trigger,index)}this.setupKeyboardHandlers(trigger);if(trigger.megamenu.target){var optionsCustomAttributes=void 0;trigger.megamenu.children=this.getTriggerChildren(trigger.megamenu.target);this.setupActivationHandlers(trigger);trigger.id=menuItemID;trigger.megamenu.target.id=trigger.megamenu.target.id||menuItemID+"--target";optionsCustomAttributes=typeof this.options.customAttributes==="function"?this.options.customAttributes(trigger):this.options.customAttributes;trigger.megamenu.customAttributes=(0,_bornUtilities.objectAssign)(this.getCustomAttributes(trigger),optionsCustomAttributes);this.updateAttributes(trigger)}if(trigger.matches(this.options.unsetSiblingsSelector)){var eventsArray=this.getEventsArray(trigger);eventsArray.forEach(function(currentEvt){trigger.addEventListener(currentEvt,function(){this.unsetSiblings(trigger)}.bind(this))}.bind(this))}}},{key:"setInitialTabIndex",value:function setInitialTabIndex(trigger,index){trigger.tabIndex=index===0?"0":"-1";this._previousFocus=index===0?trigger:this._previousFocus}},{key:"shiftFocus",value:function shiftFocus(trigger,setDirection,moveForward){if(this._previousFocus&&this.options.keyboardNavigation.manageTabIndex){this._previousFocus.tabIndex="-1"}if(trigger){if(setDirection&&trigger.megamenu.siblings.length>1){var consumedChecks=0;while(!this.elConsumesSpace(trigger)&&consumedChecks<=trigger.megamenu.siblings.length){consumedChecks++;trigger=this.getDirectionTrigger(trigger,moveForward)}}this._previousFocus=trigger;if(this.options.keyboardNavigation.manageTabIndex){trigger.tabIndex="0"}(0,_bornUtilities.forceFocus)(trigger)}}},{key:"elConsumesSpace",value:function elConsumesSpace(el){return el.offsetParent||el.firstElementChild&&el.firstElementChild.offsetHeight>0}},{key:"getMenuItemID",value:function getMenuItemID(){var randomString=Math.floor((new Date).getTime()*Math.random()).toString().substr(0,4);return"menuItemID-"+randomString}},{key:"getCustomAttributes",value:function getCustomAttributes(trigger){return{"aria-expanded":{value:["false","true"],trigger:true},"aria-labelledby":{value:trigger.id,target:true},"aria-controls":{value:trigger.megamenu.target.id,trigger:true}}}},{key:"updateAttributes",value:function updateAttributes(trigger,isActive){var customAttributes=trigger.megamenu.customAttributes;for(var attrKey in customAttributes){if(customAttributes[attrKey]){if(customAttributes[attrKey].trigger){this.setAttributeValue(trigger,attrKey,customAttributes[attrKey],isActive)}else if(customAttributes[attrKey].target){this.setAttributeValue(trigger.megamenu.target,attrKey,customAttributes[attrKey],isActive)}else{this.setAttributeValue(trigger,attrKey,customAttributes[attrKey],isActive);this.setAttributeValue(trigger.megamenu.target,attrKey,customAttributes[attrKey],isActive)}}}}},{key:"setAttributeValue",value:function setAttributeValue(el,attrName,attrObject,isActive){var value=typeof attrObject.value==="string"?attrObject.value:isActive?attrObject.value[1]:attrObject.value[0];el.setAttribute(attrName,value)}},{key:"getTriggerParent",value:function getTriggerParent(trigger){return trigger.closest(trigger.getAttribute("data-menu-parent"))||trigger.parentNode}},{key:"getTriggerTarget",value:function getTriggerTarget(trigger){return trigger.megamenu.parent.querySelector(trigger.getAttribute("data-menu-target")||this.options.targetSelector)}},{key:"getTriggerChildren",value:function getTriggerChildren(target){return target.querySelectorAll(this.options.triggerSelector)}},{key:"getTriggerSiblings",value:function getTriggerSiblings(trigger){var closestParentContainer=this.getClosestSiblingsParent(trigger);return[].filter.call(this.menu.triggers,function(currentTrigger){return closestParentContainer.contains(currentTrigger)&&this.isSiblingTrigger(trigger,currentTrigger)}.bind(this))}},{key:"getClosestSiblingsParent",value:function getClosestSiblingsParent(trigger){if(trigger&&trigger.nodeName){return trigger.closest(trigger.getAttribute("data-menu-parent")||this.options.targetSelector)||this.menu}else if(!trigger||trigger.relatedTarget&&trigger.relatedTarget!==null){return this.menu}else{return}}},{key:"isSiblingTrigger",value:function isSiblingTrigger(currentTrigger,testTrigger){return currentTrigger.getAttribute(this.options.matchingSiblingsAttribute)===testTrigger.getAttribute(this.options.matchingSiblingsAttribute)}},{key:"isTriggerActive",value:function isTriggerActive(trigger){return trigger.megamenu.isActive}},{key:"getDirectionTrigger",value:function getDirectionTrigger(trigger,moveForward){var followingTrigger=null;if(moveForward){followingTrigger=trigger.megamenu.siblings[trigger.megamenu.index+1]||trigger.megamenu.siblings[0]}else{followingTrigger=trigger.megamenu.siblings[trigger.megamenu.index-1]||trigger.megamenu.siblings[trigger.megamenu.siblings.length-1]}return followingTrigger}},{key:"getMatchingCharTrigger",value:function getMatchingCharTrigger(trigger,charCode){var matchingTrigger=null;for(var i=0;i<trigger.megamenu.siblings.length;i++){if(trigger.megamenu.siblings[i].textContent.toUpperCase().trim().charCodeAt(0)===charCode&&trigger.megamenu.siblings[i]!==trigger){matchingTrigger=trigger.megamenu.siblings[i];break}}return matchingTrigger}},{key:"getEventsArray",value:function getEventsArray(trigger){var eventsArray=[];if(typeof this.options.events==="string"){eventsArray=this.options.events.split(" ")}else if(Array.isArray(this.options.events)){this.options.events.forEach(function(currentEventGroup){if(trigger.matches(currentEventGroup.selector)){eventsArray=eventsArray.concat(currentEventGroup.events.split(" "))}})}return eventsArray}},{key:"setupActivationHandlers",value:function setupActivationHandlers(trigger){var scope=this,eventsArray=this.getEventsArray(trigger);eventsArray.forEach(function(currentEvt){trigger.addEventListener(currentEvt,function(evt){var evtType=evt.type,isTouch=evtType.indexOf("touch")>=0,isKeyboard=evtType==="keydown"||evtType==="keyup",allowClickThrough=scope.options.clickThroughSelector&&trigger.matches(scope.options.clickThroughSelector);if(isTouch||(trigger.nodeName==="A"||evt.target.nodeName==="A")&&!allowClickThrough&&!isKeyboard){evt.preventDefault()}if(evtType==="mouseenter"||evtType==="mouseover"){var minDelay=scope.isMouseMoveFast&&!scope.options.hoverDelay?100:scope.options.hoverDelay;if(scope.isMouseMoveFast||scope.options.hoverDelay&&!scope.menu.isActive){scope.overstay=window.setTimeout(function(){scope.toggleTriggerActive(this,true)}.bind(this),minDelay);return}else{scope.toggleTriggerActive(this,true)}}else if(isKeyboard){if(scope.options.keyboardNavigation.triggers.indexOf(evt.keyCode)!==-1&&!allowClickThrough){evt.preventDefault();scope.toggleTriggerActive(this);scope.shiftFocus(trigger.megamenu.children[0],true,true)}}else if(evt.type!=="click"||!allowClickThrough){scope.toggleTriggerActive(this);scope.shiftFocus(this)}if(isTouch){evt.stopImmediatePropagation()}})});trigger.megamenu.parent.addEventListener("mouseleave",function(){clearInterval(scope.overstay)})}},{key:"setupKeyboardHandlers",value:function setupKeyboardHandlers(trigger){trigger.addEventListener("keydown",function(evt){var isLeftArrow=evt.keyCode===37,isUpArrow=evt.keyCode===38,isRightArrow=evt.keyCode===39,isDownArrow=evt.keyCode===40;if(isLeftArrow||isUpArrow||isRightArrow||isDownArrow){var matchesHorizontal=this.options.keyboardNavigation.horizontal&&trigger.matches(this.options.keyboardNavigation.horizontal),matchesVertical=this.options.keyboardNavigation.vertical&&trigger.matches(this.options.keyboardNavigation.vertical),isHorizontalNavigation=(isLeftArrow||isRightArrow)&&matchesHorizontal,isVerticalNavigation=(isUpArrow||isDownArrow)&&matchesVertical;evt.preventDefault();if(isHorizontalNavigation||isVerticalNavigation){var moveForward=isRightArrow||isDownArrow,directionTrigger=this.getDirectionTrigger.call(this,trigger,moveForward);this.shiftFocus(directionTrigger,true,moveForward)}else{if((matchesHorizontal&&isDownArrow||matchesVertical&&isRightArrow)&&trigger.megamenu.target){var triggerIsActive=this.isTriggerActive(trigger);if(!triggerIsActive){this.toggleTriggerActive(trigger)}this.shiftFocus(trigger.megamenu.children[0],true,true)}else if(matchesVertical&&(isRightArrow||isLeftArrow)){var lastActiveTrigger=this.getLastActiveTrigger(),targetTrigger=lastActiveTrigger,setDirection=false,_moveForward=false;if(isRightArrow&&!trigger.megamenu.target){setDirection=true;_moveForward=true;targetTrigger=this.getDirectionTrigger.call(this,lastActiveTrigger,true);targetTrigger.megamenu.target?this.toggleTriggerActive(targetTrigger):this.unsetSiblings(targetTrigger)}else if(isLeftArrow){this.unsetSiblings(lastActiveTrigger)}this.shiftFocus(targetTrigger,setDirection,_moveForward)}}}else if(evt.keyCode>=65&&evt.keyCode<=90){var matchingTrigger=this.getMatchingCharTrigger.call(this,trigger,evt.keyCode);this.shiftFocus(matchingTrigger)}else if(evt.keyCode===35){this.shiftFocus(trigger.megamenu.siblings[trigger.megamenu.siblings.length-1],true,false)}else if(evt.keyCode===36){this.shiftFocus(trigger.megamenu.siblings[0],true,true)}}.bind(this))}},{key:"toggleTriggerActive",value:function toggleTriggerActive(trigger,isMousehover){if(this.isTriggerActive(trigger)){if(!isMousehover&&!trigger.megamenu.disableUnsetSelf){this.unsetSiblings(trigger)}}else{this._beforeTriggerUnset(trigger,this);this.unsetSiblings(trigger,this.setTriggerActive.bind(this));this._afterTriggerSet(trigger,this)}}},{key:"setTriggerActive",value:function setTriggerActive(trigger){var SCOPE=this;trigger.megamenu.isActive=true;trigger.classList.add(this.options.itemActiveClass);trigger.megamenu.target.classList.add(this.options.itemActiveClass);trigger.megamenu.parent.classList.add(this.options.itemActiveClass);this.updateAttributes(trigger,true);if(!this.menu.isActive){var activeWaitEl=this.options.waitForTransition?this.menu.querySelector(this.options.waitForTransition.selector+"."+this.options.itemActiveClass):false;if(this.canDetectTransition(activeWaitEl)){activeWaitEl.addEventListener((0,_bornUtilities.whichTransition)(),_transitionEndHandler)}else{this.setMenuActive()}}function _transitionEndHandler(evt){if(SCOPE.options.waitForTransition.property===evt.propertyName||SCOPE.options.waitForTransition.property==="all"){SCOPE.setMenuActive();this.removeEventListener((0,_bornUtilities.whichTransition)(),_transitionEndHandler)}}}},{key:"unsetCurrentSubmenu",value:function unsetCurrentSubmenu(evt){var isEscKey=evt.keyCode===27;if(isEscKey||(evt.keyCode===13||!evt.keyCode)&&evt.target.hasAttribute("data-menu-close")){var lastActiveTrigger=this.getLastActiveTrigger();evt.preventDefault();if(evt.target&&this.getClosestSiblingsParent(evt.target)){var targetTriggerSelector=evt.target.getAttribute("data-menu-close"),allowUnset=!isEscKey||lastActiveTrigger&&!lastActiveTrigger.megamenu.disableUnsetSelf;lastActiveTrigger=targetTriggerSelector?this.getMatchingActiveTrigger(targetTriggerSelector)||lastActiveTrigger:lastActiveTrigger;if(allowUnset){this.unsetSiblings(lastActiveTrigger)}else if(evt.target===lastActiveTrigger){lastActiveTrigger=this.getLastActiveTrigger(2);this.unsetSiblings(lastActiveTrigger)}if(lastActiveTrigger){evt.stopPropagation()}}else{this.unsetSiblings()}if(lastActiveTrigger){this.shiftFocus(lastActiveTrigger)}}}},{key:"canDetectTransition",value:function canDetectTransition(targetEl){return targetEl&&window.getComputedStyle(targetEl).transitionDuration!=="0s"}},{key:"getLastActiveTrigger",value:function getLastActiveTrigger(){var index=arguments.length>0&&arguments[0]!==undefined?arguments[0]:1;var activeTriggers=this.getActiveTriggers();return activeTriggers[activeTriggers.length-index]}},{key:"getActiveTriggers",value:function getActiveTriggers(){return[].filter.call(this.menu.triggers,this.isTriggerActive.bind(this))}},{key:"getMatchingActiveTrigger",value:function getMatchingActiveTrigger(selector){return this.menu.querySelector(selector+"."+this.options.itemActiveClass)}},{key:"setMenuActive",value:function setMenuActive(){if(this.getActiveTriggers().length){this.menu.isActive=true;this.menu.classList.add(this.options.menuActiveClass);this._afterMenuSet(this.menu,this)}}},{key:"setMenuInactive",value:function setMenuInactive(){if(!this.getActiveTriggers().length){this.menu.isActive=false;this.menu.classList.remove(this.options.menuActiveClass);this._afterMenuUnset(this.menu,this)}}},{key:"unsetSiblings",value:function unsetSiblings(trigger,callback){var commonContainer=this.getClosestSiblingsParent(trigger)||this.menu,activeElements=commonContainer.querySelectorAll("."+this.options.itemActiveClass);[].forEach.call(activeElements,function(el){el.classList.remove(this.options.itemActiveClass);if(el.megamenu){el.megamenu.isActive=false;this._afterTriggerUnset(el,this);if(el.megamenu.target){this.updateAttributes(el)}}}.bind(this));if(typeof callback==="function"){callback(trigger)}this.setMenuInactive()}}]);return Megamenu}();exports.default=Megamenu});